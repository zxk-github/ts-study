{
  "compilerOptions": {
    /* Basic Options */
    // "incremental": true,                   /* Enable incremental compilation 增量编译，ts在第一次编译之后，会存储一个编译信息的文件，在二次编译的时候，节约时间*/ 
    // diagnosetics: true                      打印诊断信息，其实就是编译时间等一些参数
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information 增量编译标记文件存储位置 */
   
    "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. 编译之后目标语言版本*/
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. 生成代码的模块化标准*/
    
    // "outFile": "./",                       /* Concatenate and emit output to single file. 将多个相互以来的文件合并成一个文件  一般使用在module:nAMD模块中*/
    // "lib": ['es2019.Array'],                             /* Specify library files to be included in the compilation. ts需要引入的一些类库的声明文件*/
    // "allowJs": true,                       /* Allow javascript files to be compiled. 允许编译器编译js jsx结尾的文件 */
    // "checkJs": true,                       /* Report errors in .js files. 允许检查js文件中的错误，并给出错误信息 */
    // "outDir": "./",                        /* Redirect output structure to the directory. 指定编译之后的文件输出目录*/
    // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. 指定输入文件目录 控制输出目录结构 */


    "jsx": "react",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* Generates corresponding '.d.ts' file. 自动生成一个声明文件*/
   // declarationDir: './d'                     指定生成的声明文件存放目录

     // emitDeclarationOnly 只生成声明文件
    
    // "sourceMap": true,                     /* Generates corresponding '.map' file. 自动生成sourcemap*/
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. sourcemap包含在编译之后文件中*/
    // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. 为声明文件也申明一份sourcemap*/
    // "composite": true,                     /* Enable project compilation */
    // "removeComments": true,                /* Do not emit comments to output. 移除注释*/
    // "noEmit": true,                        /* Do not emit outputs. 不生成任何编译之后的文件 s*/
    // noEmitOnError 当编译出现错误的时候，不生成任何文件
    // noEmitHelpers 不生成helper函数，需要安装ts-helper
    // importHelpers 通过tslib引入helper函数，文件必须是模块
   // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
   
   // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. 降低编译器的实现，如果编译目标是es3 或者 es5对便利器就会有比较低级的实现*/
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. 开启所有严格类型检查 */
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. 不允许有any类型*/
    // "strictNullChecks": true,              /* Enable strict null checks. 不允许把null undefined赋值给其他类型变量*/
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. 不允许函数参数双向斜边*/
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions.执行严格的bind call apply检查 */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. 类的实例必须初始化*/
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type.不允许this有隐士的any类型 */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. 默认在代码中注入 use strict */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. 不允许出现只声明但是没有使用的变量 */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. 检查函数没有使用的参数 */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. 防止switch语句的贯穿*/
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement.保证程序的每个分支都要有返回值 */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). 模块的解析策略 */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. 路径映射相对于baseUrl的 */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. 将多个目录放在一个虚拟的目录下，用于运行 */
    
    // "typeRoots": [],                       /* List of folders to include type definitions from.控制声明文件查找目录的，默认是node_modules/@types */
    // "types": [],                           /* Type declaration files to be included in compilation.指定需要加载的的types包 */
    
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    // listEmittedFiles 打印出输出文件目录
    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  }
}
